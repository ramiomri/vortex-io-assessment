on:
  push:
    branches:
      - main
env:
  DOCKER_IMAGE: lambda-app
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Lint with Ruff
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff
          ruff check --output-format=github .
        continue-on-error: true
      - name: Run unit tests
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov
          pytest --cov-report term-missing --cov=lambda_app/ tests/
        continue-on-error: true
      - name: Build Docker image
        run: |
          poetry export --without-hashes > lambda_app/requirements.txt
          docker build -t ${DOCKER_IMAGE} .
      - name: Run integration test 
        run: |
          docker run -d -p 3001:8080 ${DOCKER_IMAGE}:latest
          sleep 5
          chmod +x scripts/check_invoke.sh
          ./scripts/check_invoke.sh
      - name: clean up container
        run: docker stop $(docker ps -q --filter "ancestor=${DOCKER_IMAGE}:latest")
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest
        continue-on-error: true